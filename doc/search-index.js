var searchIndex = JSON.parse('{\
"aper":{"doc":"Aper","t":[12,12,3,13,8,24,3,8,8,4,6,8,16,24,3,13,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,3,13,13,3,3,4,13,6,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["0","0","PlayerID","ReplaceState","StateMachine","StateMachine","StateMachineContainerProgram","StateProgram","StateProgramFactory","StateUpdateMessage","Timestamp","Transition","Transition","Transition","TransitionEvent","TransitionState","apply","apply","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","create","data_structures","default","deserialize","deserialize","deserialize","deserialize","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","hash","into","into","into","into","ne","ne","new","partial_cmp","player","serialize","serialize","serialize","serialize","suspended_event","suspended_event","timestamp","to_owned","to_owned","to_owned","to_string","transition","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Append","Apply","Atom","Constant","Delete","Insert","List","ListItem","ListOperation","Move","OperationWithId","Prepend","ReplaceAtom","ZenoIndex","append","apply","apply","apply","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","delete","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","id","insert","insert_between","into","into","into","into","into","into","into","iter","location","map_item","move_item","ne","ne","ne","ne","ne","ne","new","new","new","new_after","new_before","new_between","partial_cmp","prepend","replace","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value"],"q":["aper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aper::data_structures","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","An opaque identifier for a single connected user.","Instructs the client to completely discard its existing …","This trait provides the methods that Aper needs to be …","","A [StateProgram] implementation that can be built from …","This trait can be added to a [StateMachine] which takes a …","A trait indicating that a struct can be used to create a […","A message from the server to a client that tells it to …","","This trait indicates that a type can be used as the …","The [StateMachine::Transition] type associates another …","","","Instructs the client to apply the given [TransitionEvent] …","Update the state machine according to the given […","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A state machine may “suspend” an event which occurs …","A state machine may “suspend” an event which occurs …","","","","","","","","","","","","","","","","","","","","","A [StateMachine] representing a value which is “atomic…","A struct that can wrap a value so that it can be used in …","","","Represents a list of items, similar to a <code>Vec</code>, but …","Represents a view of an entry in a list during iteration. …","","","","","Represents a transition used to change the value of an […","A [ZenoIndex] is a binary representation of a fraction …","Construct an [OperationWithId] representing appending the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a [ListOperation] representing deleting the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a [OperationWithId] representing inserting the …","","","","","","","","","Returns an iterator over [ListItem] views into this list.","","","Construct a [ListOperation] representing moving an object …","","","","","","","Create a new [Atom] with a given initial value.","Create a new [Constant] with a given initial value.","","","","","","Construct a [OperationWithId] representing prepending the …","Return a transition which, when processed, will replace …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve the current value of the atom.","Retrieve the current value of the atom.",""],"i":[1,2,0,3,0,0,0,0,0,0,0,0,4,0,0,3,4,1,1,2,5,3,1,2,5,3,1,2,5,1,2,5,2,6,0,1,1,2,5,3,2,5,1,2,2,5,3,1,2,5,3,2,1,2,5,3,2,5,5,2,5,1,2,5,3,7,7,5,1,2,5,2,5,1,2,5,3,1,2,5,3,1,2,5,3,8,8,0,0,8,8,0,0,0,8,0,8,0,0,9,10,11,9,12,10,13,11,8,9,14,12,10,13,11,8,9,14,10,13,11,8,9,14,10,13,11,8,9,14,14,10,9,14,9,10,13,11,8,9,14,10,13,11,8,9,14,10,13,11,8,9,14,12,10,13,11,8,9,14,12,9,9,12,10,13,11,8,9,14,9,12,9,9,10,13,11,8,9,14,10,11,9,14,14,14,14,9,10,10,13,11,8,9,14,10,13,11,8,9,14,12,10,13,11,8,9,14,12,10,13,11,8,9,14,12,10,13,11,8,9,14,10,11,12],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["statemachinecontainerprogram",3]],[[],["playerid",3]],[[],["transitionevent",3]],[[]],[[]],[[]],[[["playerid",3]],["ordering",4]],[[]],null,[[],["statemachinecontainerprogram",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["playerid",3]],["bool",15]],[[["transitionevent",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["playerid",3]],["bool",15]],[[["transitionevent",3]],["bool",15]],[[["playerid",3],["timestamp",6],["option",4]],["transitionevent",3]],[[["playerid",3]],[["option",4],["ordering",4]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["option",4],["transitionevent",3]]],[[],[["option",4],["transitionevent",3]]],null,[[]],[[]],[[]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["operationwithid",6]],[[]],[[["invalidtransition",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["atom",3]],[[],["replaceatom",3]],[[],["constant",3]],[[],["listoperation",4]],[[],["list",3]],[[],["zenoindex",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ordering",4]],[[]],[[]],[[]],[[["uuid",3]],["listoperation",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["atom",3]],["bool",15]],[[["replaceatom",3]],["bool",15]],[[["constant",3]],["bool",15]],[[["listoperation",4]],["bool",15]],[[["list",3]],["bool",15]],[[["zenoindex",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["zenoindex",3]],["operationwithid",6]],[[["uuid",3]],["operationwithid",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["uuid",3]]],[[["uuid",3],["zenoindex",3]],["listoperation",4]],[[["atom",3]],["bool",15]],[[["replaceatom",3]],["bool",15]],[[["constant",3]],["bool",15]],[[["listoperation",4]],["bool",15]],[[["list",3]],["bool",15]],[[["zenoindex",3]],["bool",15]],[[]],[[]],[[],["list",3]],[[["zenoindex",3]],["zenoindex",3]],[[["zenoindex",3]],["zenoindex",3]],[[["zenoindex",3]],["zenoindex",3]],[[],[["ordering",4],["option",4]]],[[],["operationwithid",6]],[[],["replaceatom",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null],"p":[[3,"StateMachineContainerProgram"],[3,"PlayerID"],[4,"StateUpdateMessage"],[8,"StateMachine"],[3,"TransitionEvent"],[8,"StateProgramFactory"],[8,"StateProgram"],[4,"ListOperation"],[3,"List"],[3,"Atom"],[3,"Constant"],[3,"ListItem"],[3,"ReplaceAtom"],[3,"ZenoIndex"]]},\
"aper_actix":{"doc":"","t":[12,3,4,13,3,13,3,3,3,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","ChannelActor","ChannelMessage","Connect","CreateChannelMessage","Event","GetChannelMessage","PlayerActor","ServerActor","ServerBuilder","Tick","WrappedStateUpdateMessage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","channel","from","from","from","from","from","from","from","from","handle","handle","handle","handle","handle","into","into","into","into","into","into","into","into","last_seen","new","new","new","new","new","serve","serve_on","started","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["aper_actix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Actor representing a channel, responsible for receiving …","A message received by a [crate::ChannelActor].","A new player has joined this channel.","Tells the server to create a new channel and return its …","A transition has been received from a player. Includes …","Actix message to request the address of a channel by …","Actor which owns the connection to the client WebSocket …","Responds to messages from the player which are not …","Builder for creating a server from a [StateProgram].","A transition is occurring because a suspended transition …","A [StateUpdateMessage], wrapped in a new struct so that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new builder with the given initial state.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,2,0,2,0,0,0,0,2,0,3,4,5,6,7,1,2,8,3,4,5,6,7,1,2,8,4,6,3,4,5,6,7,1,2,8,3,4,4,7,7,3,4,5,6,7,1,2,8,4,3,4,5,6,7,5,5,4,4,3,4,5,6,7,1,2,8,3,4,5,6,7,1,2,8,3,4,5,6,7,1,2,8,3,4,5,6,7,1,2,8],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["context",3],["channelmessage",4]]],[[["wrappedstateupdatemessage",3]]],[[["message",4],["result",4],["protocolerror",4]]],[[["context",3],["getchannelmessage",3]]],[[["createchannelmessage",3],["context",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["channelactor",3]],[[["addr",3],["channelactor",3]],["playeractor",3]],[[],["serverbuilder",3]],[[["string",3]],["getchannelmessage",3]],[[]],[[],["result",6]],[[["u32",15],["str",15]],["result",6]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"WrappedStateUpdateMessage"],[4,"ChannelMessage"],[3,"ChannelActor"],[3,"PlayerActor"],[3,"ServerBuilder"],[3,"GetChannelMessage"],[3,"ServerActor"],[3,"CreateChannelMessage"]]},\
"aper_yew":{"doc":"Aper-Yew","t":[16,3,13,13,4,13,13,13,16,3,3,13,4,3,13,8,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,12,11,11],"n":["Callback","ClientBuilder","Connected","ErrorConnecting","Msg","NoOp","Redraw","ServerMessage","State","StateProgramComponent","StateProgramComponentProps","StateTransition","Status","UpdateInterval","UpdateStatus","View","ViewContext","WaitingForInitialState","WaitingToConnect","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","callback","change","change","clone","clone_into","create","create","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","mount_to_body","new","onerror","player","redraw","render","render","time","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","view","view","view","view","websocket_url","with_abs_websocket_url","with_rel_websocket_url"],"q":["aper_yew","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","The component has connected to the server and is assumed …","There was some error during the <code>WaitingToConnect</code> or …","Represents a message this component could receive, either …","Do nothing.","Trigger a redraw of this View. Redraws are automatically …","A [StateUpdateMessage] was received from the server.","","Yew Component which owns a copy of the state as well as a …","Properties for [StateProgramComponent].","A [Transition] object was initiated by the view, usually …","The connection status of the component, and stores the …","A Yew component that calls the given callback at a …","The status of the connection with the remote server has …","Applies to a struct that can turn a value of the …","Context passed to a [View].","The component has successfully connected to the server, …","The component is in the process of connecting to the …","","","","","","","","","","","","","","","","A function called to invoke a state machine …","","","","","","On creation, we initialize the connection, which starts …","","","","","","","","","","","","","","","","","","","A no-argument callback that is invoked if there is a …","The ID of the current player.","A function called to force a redraw.","","","An estimate of the server’s time as of the call to <code>view</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Turn a value into HTML.","","","An object implementing [View]. From the moment that […","The websocket URL (beginning ws:// or wss://) of the …","",""],"i":[1,0,2,2,0,3,3,3,1,0,0,3,0,0,3,0,0,2,2,4,5,6,7,8,2,3,4,5,6,7,8,2,3,8,6,5,7,8,8,5,7,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,4,8,6,6,5,7,6,8,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,5,7,1,5,7,8,8,4,4],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["shouldrender",6]],[[],["shouldrender",6]],[[],["stateprogramcomponentprops",3]],[[]],[[["componentlink",6]]],[[["componentlink",6]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["clientbuilder",3]],null,null,null,[[],["vnode",4]],[[],["vnode",4]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["shouldrender",6]],[[],["shouldrender",6]],[[["viewcontext",3]],["html",6]],[[],["html",6]],[[],["html",6]],null,null,[[["str",15]]],[[["str",15]]]],"p":[[8,"View"],[4,"Status"],[4,"Msg"],[3,"ClientBuilder"],[3,"UpdateInterval"],[3,"ViewContext"],[3,"StateProgramComponent"],[3,"StateProgramComponentProps"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};