var searchIndex = JSON.parse('{\
"aper":{"doc":"Aper","t":[0,3,3,3,3,3,8,16,10,24,8,24,8,11,8,10,3,12,6,3,12,12,12,11,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["data_structures","Atom","ReplaceAtom","Constant","List","ZenoIndex","StateMachine","Transition","apply","StateMachine","Transition","Transition","StateProgram","suspended_event","StateProgramFactory","create","PlayerID","0","Timestamp","TransitionEvent","timestamp","player","transition","new","StateUpdateMessage","ReplaceState","TransitionState","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","apply","apply","apply","clone","clone","clone","clone","clone","clone","clone","default","default","default","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","new","value","replace","new","value","append","prepend","insert","delete","move_item","map_item","iter","new_before","new_after","new_between","suspended_event"],"q":["aper","aper::data_structures","","","","","aper","","","","","","","","","","","","","","","","","","","","","aper::data_structures","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aper","","","","","","","","","","","","","","","","","","","","","","","","","","aper::data_structures","","","","","","","","aper","","aper::data_structures","","","","aper","aper::data_structures","","","","","","","","","","aper","","","","aper::data_structures","aper","aper::data_structures","","","","","aper","","","","","aper::data_structures","","","","","aper","","","aper::data_structures","","","","","aper","","","aper::data_structures","","","","","","","","","","","","","","","aper"],"d":["","A [StateMachine] representing a value which is “atomic…","Represents a transition used to change the value of an […","A struct that can wrap a value so that it can be used in …","Represents a list of items, similar to a <code>Vec</code>, but …","A [ZenoIndex] is a binary representation of a fraction …","This trait provides the methods that Aper needs to be …","The [StateMachine::Transition] type associates another …","Update the state machine according to the given […","","","","","A state machine may “suspend” an event which occurs …","A trait indicating that a struct can be used to create a […","","An opaque identifier for a single connected user.","","","","","","","","A message from the server to a client that tells it to …","Instructs the client to completely discard its existing …","Instructs the client to apply the given [TransitionEvent] …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new [Atom] with a given initial value.","Retrieve the current value of the atom.","Return a transition which, when processed, will replace …","Create a new [Atom] with a given initial value.","Retrieve the current value of the atom.","Construct a [ListOperation] representing appending the …","Construct a [ListOperation] representing prepending the …","Construct a [ListOperation] representing inserting the …","Construct a [ListOperation] representing deleting the …","Construct a [ListOperation] representing moving an object …","","Returns an iterator over [ListItem] views into this list.","","","","A state machine may “suspend” an event which occurs …"],"i":[0,0,0,0,0,0,0,1,1,0,0,0,0,2,0,3,0,4,0,0,5,5,5,5,0,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,9,10,7,8,9,10,11,4,5,7,10,11,11,4,7,7,8,8,9,9,10,10,11,11,4,4,5,5,11,4,7,8,9,10,11,4,5,6,4,4,7,8,9,10,11,4,5,6,7,8,9,10,11,4,5,6,7,7,7,9,9,10,10,10,10,10,10,10,11,11,11,2],"f":[null,null,null,null,null,null,null,null,[[]],null,null,null,null,[[],[["transitionevent",3],["option",4]]],null,[[]],null,null,null,null,null,null,null,[[["timestamp",6],["playerid",3],["option",4]],["transitionevent",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["invalidtransition",3]]],[[]],[[],["atom",3]],[[],["replaceatom",3]],[[],["constant",3]],[[],["list",3]],[[],["zenoindex",3]],[[],["playerid",3]],[[],["transitionevent",3]],[[]],[[]],[[]],[[],["ordering",4]],[[["playerid",3]],["ordering",4]],[[["atom",3]],["bool",15]],[[["atom",3]],["bool",15]],[[["replaceatom",3]],["bool",15]],[[["replaceatom",3]],["bool",15]],[[["constant",3]],["bool",15]],[[["constant",3]],["bool",15]],[[["list",3]],["bool",15]],[[["list",3]],["bool",15]],[[["zenoindex",3]],["bool",15]],[[["zenoindex",3]],["bool",15]],[[["playerid",3]],["bool",15]],[[["playerid",3]],["bool",15]],[[["transitionevent",3]],["bool",15]],[[["transitionevent",3]],["bool",15]],[[],[["ordering",4],["option",4]]],[[["playerid",3]],[["option",4],["ordering",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["replaceatom",3]],[[]],[[]],[[]],[[]],[[["zenoindex",3]]],[[["uuid",3]],["listoperation",4]],[[["uuid",3],["zenoindex",3]],["listoperation",4]],[[["uuid",3]]],[[]],[[["zenoindex",3]],["zenoindex",3]],[[["zenoindex",3]],["zenoindex",3]],[[["zenoindex",3]],["zenoindex",3]],[[],[["transitionevent",3],["option",4]]]],"p":[[8,"StateMachine"],[8,"StateProgram"],[8,"StateProgramFactory"],[3,"PlayerID"],[3,"TransitionEvent"],[4,"StateUpdateMessage"],[3,"Atom"],[3,"ReplaceAtom"],[3,"Constant"],[3,"List"],[3,"ZenoIndex"]]},\
"aper_actix":{"doc":"","t":[3,4,13,13,13,3,12,3,12,12,12,3,3,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ChannelActor","ChannelMessage","Connect","Event","Tick","WrappedStateUpdateMessage","0","PlayerActor","channel","last_seen","token","CreateChannelMessage","GetChannelMessage","channel","ServerActor","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","started","handle","handle","handle","handle","handle","new","new","new","new"],"q":["aper_actix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Actor representing a channel, responsible for receiving …","A message received by a [crate::ChannelActor].","A new player has joined this channel.","A transition has been received from a player. Includes …","A transition is occurring because a suspended transition …","A [StateUpdateMessage], wrapped in a new struct so that …","","","","","","Tells the server to create a new channel and return its …","Actix message to request the address of a channel by …","","Responds to messages from the player which are not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,0,2,0,3,3,3,0,0,4,0,5,5,5,5,5,5,5,5,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,6,6,6,6,6,6,6,6,4,4,4,4,4,4,4,4,7,7,7,7,7,7,7,7,3,5,3,7,7,3,5,3,4,7],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["context",3],["channelmessage",4]]],[[["wrappedstateupdatemessage",3]]],[[["context",3],["getchannelmessage",3]]],[[["context",3],["createchannelmessage",3]]],[[["result",4],["message",4],["protocolerror",4]]],[[],["channelactor",3]],[[["string",3],["addr",3],["channelactor",3]],["playeractor",3]],[[["string",3]],["getchannelmessage",3]],[[]]],"p":[[4,"ChannelMessage"],[3,"WrappedStateUpdateMessage"],[3,"PlayerActor"],[3,"GetChannelMessage"],[3,"ChannelActor"],[3,"CreateChannelMessage"],[3,"ServerActor"]]},\
"aper_yew":{"doc":"Aper-Yew","t":[3,8,16,16,10,3,12,12,12,12,3,12,12,12,4,13,13,13,13,4,13,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["UpdateInterval","View","State","Callback","view","ViewContext","callback","redraw","player","time","Props","websocket_url","onerror","view","Status","WaitingToConnect","WaitingForInitialState","Connected","ErrorConnecting","Msg","StateTransition","ServerMessage","UpdateStatus","Redraw","NoOp","StateProgramComponent","from","into","borrow","borrow_mut","try_from","try_into","type_id","render","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","render","clone","fmt","fmt","create","update","change","view","create","update","change","view","builder"],"q":["aper_yew","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A Yew component that calls the given callback at a …","","","","","","","","","","Properties for [StateMachineComponent].","The websocket URL (beginning ws:// or wss://) of the …","A no-argument callback that is invoked if there is a …","An object implementing [StateView]. From the moment that […","The connection status of the component, and stores the …","The component is in the process of connecting to the …","The component has successfully connected to the server, …","The component has connected to the server and is assumed …","There was some error during the <code>WaitingToConnect</code> or …","Represents a message this component could receive, either …","A [StateMachine::Transition] object was initiated by the …","A [StateUpdateMessage] was received from the server.","The status of the connection with the remote server has …","Trigger a redraw of this View. Redraws are automatically …","Do nothing.","Yew Component which owns a copy of the state as well as a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","On creation, we initialize the connection, which starts …","","","",""],"i":[0,0,1,1,1,0,2,2,2,2,0,3,3,3,0,4,4,4,4,0,5,5,5,5,5,0,6,6,6,6,6,6,6,6,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,7,7,7,7,7,7,7,7,3,4,5,6,6,6,6,7,7,7,7,3],"f":[null,null,null,null,[[["viewcontext",3]],["html",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["vnode",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["vnode",4]],[[],["props",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["componentlink",6]]],[[],["shouldrender",6]],[[],["shouldrender",6]],[[],["html",6]],[[["componentlink",6]]],[[],["shouldrender",6]],[[],["shouldrender",6]],[[],["html",6]],[[]]],"p":[[8,"View"],[3,"ViewContext"],[3,"Props"],[4,"Status"],[4,"Msg"],[3,"UpdateInterval"],[3,"StateProgramComponent"]]}\
}');
initSearch(searchIndex);