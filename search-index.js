var searchIndex = JSON.parse('{\
"aper":{"doc":"AperAper is a framework for real-time sharing of arbitrary…","i":[[3,"SuspendedEvent","aper","Represents a transition that a [crate::StateMachine] would…",null,null],[12,"time","","When the event should be triggered. Note that this is not…",0,null],[12,"transition","","The transition that should be triggered. This is turned…",0,null],[3,"TransitionEvent","","A transition with associated metadata: which player…",null,null],[12,"player_id","","",1,null],[12,"transition","","",1,null],[12,"timestamp","","",1,null],[3,"PlayerID","","An opaque identifier for a single connected user.",null,null],[12,"0","","",2,null],[4,"StateUpdateMessage","","A message from the server to a client that tells it to…",null,null],[13,"ReplaceState","","Instructs the client to completely discard its existing…",3,null],[13,"TransitionState","","Instructs the client to apply the given [TransitionEvent]…",3,null],[11,"new","","",0,[[["datetime",3],["utc",3]],["suspendedevent",3]]],[11,"new","","",1,[[["playerid",3]],["transitionevent",3]]],[11,"new_tick_event","","",1,[[],["transitionevent",3]]],[8,"StateMachine","","This trait provides the methods that Aper needs to be able…",null,null],[16,"Transition","","The [StateMachine::Transition] type associates another…",4,null],[10,"new","","Every state machine currently needs to be able to be…",4,[[]]],[10,"process_event","","Update the state machine according to the given…",4,[[["transitionevent",3]]]],[11,"get_suspended_event","","A state machine may \\\"suspend\\\" an event which occurs at a…",4,[[],[["suspendedevent",3],["option",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"clone","","",1,[[],["transitionevent",3]]],[11,"clone","","",2,[[],["playerid",3]]],[11,"cmp","","",2,[[["playerid",3]],["ordering",4]]],[11,"eq","","",0,[[["suspendedevent",3]]]],[11,"ne","","",0,[[["suspendedevent",3]]]],[11,"eq","","",2,[[["playerid",3]]]],[11,"ne","","",2,[[["playerid",3]]]],[11,"partial_cmp","","",2,[[["playerid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["playerid",3]]]],[11,"le","","",2,[[["playerid",3]]]],[11,"gt","","",2,[[["playerid",3]]]],[11,"ge","","",2,[[["playerid",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"hash","","",2,[[]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"get_suspended_event","","A state machine may \\\"suspend\\\" an event which occurs at a…",4,[[],[["suspendedevent",3],["option",4]]]]],"p":[[3,"SuspendedEvent"],[3,"TransitionEvent"],[3,"PlayerID"],[4,"StateUpdateMessage"],[8,"StateMachine"]]},\
"aper_actix":{"doc":"","i":[[3,"ChannelActor","aper_actix","Actor representing a channel, responsible for receiving…",null,null],[3,"WrappedStateUpdateMessage","","A [StateUpdateMessage], wrapped in a new struct so that we…",null,null],[12,"0","","",0,null],[3,"PlayerActor","","",null,null],[12,"channel","","",1,null],[12,"last_seen","","",1,null],[12,"token","","",1,null],[3,"CreateChannelMessage","","Tells the server to create a new channel and return its…",null,null],[3,"GetChannelMessage","","Actix message to request the address of a channel by name.…",null,null],[12,"channel","","",2,null],[3,"ServerActor","","Responds to messages from the player which are not…",null,null],[4,"ChannelMessage","","A message received by a [crate::ChannelActor].",null,null],[13,"Connect","","A new player has joined this channel.",3,null],[13,"Event","","A transition has been received from a player. Includes the…",3,null],[13,"Tick","","A transition is occurring because a suspended transition…",3,null],[11,"new","","",4,[[],["channelactor",3]]],[11,"new","","",1,[[["string",3],["addr",3],["channelactor",3]],["playeractor",3]]],[11,"new","","",2,[[["string",3]],["getchannelmessage",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"default","","",6,[[]]],[11,"started","","",1,[[]]],[11,"handle","","",4,[[["channelmessage",4],["context",3]]]],[11,"handle","","",1,[[["wrappedstateupdatemessage",3]]]],[11,"handle","","",6,[[["context",3],["getchannelmessage",3]]]],[11,"handle","","",6,[[["context",3],["createchannelmessage",3]]]],[11,"handle","","",1,[[["message",4],["result",4],["protocolerror",4]]]]],"p":[[3,"WrappedStateUpdateMessage"],[3,"PlayerActor"],[3,"GetChannelMessage"],[4,"ChannelMessage"],[3,"ChannelActor"],[3,"CreateChannelMessage"],[3,"ServerActor"]]},\
"aper_yew":{"doc":"Aper-YewThis crate provides a Yew component that connects…","i":[[3,"UpdateInterval","aper_yew","",null,null],[3,"StateManager","","",null,null],[3,"Props","","Properties for [StateMachineComponent].",null,null],[12,"websocket_url","","The websocket URL (beginning ws:// or wss://) of the…",0,null],[12,"onerror","","A no-argument callback that is invoked if there is a…",0,null],[12,"view","","An object implementing [StateView]. From the moment that…",0,null],[3,"StateMachineComponent","","Yew Component which owns a copy of the state as well as a…",null,null],[3,"WireWrapped","","",null,null],[12,"value","","",1,null],[12,"binary","","",1,null],[3,"ViewContext","","",null,null],[12,"callback","","",2,null],[12,"redraw","","",2,null],[12,"player_id","","",2,null],[12,"time","","",2,null],[4,"Status","","The connection status of the component, and stores the…",null,null],[13,"WaitingToConnect","","The component is in the process of connecting to the…",3,null],[13,"WaitingForInitialState","","The component has successfully connected to the server,…",3,null],[13,"Connected","","The component has connected to the server and is assumed…",3,null],[13,"ErrorConnecting","","There was some error during the `WaitingToConnect` or…",3,null],[4,"Msg","","Represents a message this component could receive, either…",null,null],[13,"GameStateTransition","","A [StateMachine::Transition] object was initiated by the…",4,null],[13,"ServerMessage","","A [StateUpdateMessage] was received from the server.",4,null],[13,"UpdateStatus","","The status of the connection with the remote server has…",4,null],[13,"Redraw","","Trigger a redraw of this View. Redraws are automatically…",4,null],[13,"NoOp","","Do nothing.",4,null],[8,"StateView","","A trait implemented by objects which can render a…",null,null],[16,"State","","Defines the struct used to represent the state that this…",5,null],[10,"view","","Render the given state into a [yew::Html] result.",5,[[["viewcontext",3]],["html",6]]],[11,"get_estimated_server_time","","",6,[[],[["utc",3],["datetime",3]]]],[11,"new","","",6,[[["utc",3],["datetime",3]],["statemanager",3]]],[11,"process_event","","",6,[[["transitionevent",3]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"render","","",7,[[],["vnode",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"render","","",8,[[],["vnode",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",1,[[["text",6]]]],[11,"from","","",1,[[["binary",6]]]],[11,"clone","","",0,[[],["props",3]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"create","","",7,[[["componentlink",6]]]],[11,"update","","",7,[[],["shouldrender",6]]],[11,"change","","",7,[[],["shouldrender",6]]],[11,"view","","",7,[[],["html",6]]],[11,"create","","On creation, we initialize the connection, which starts…",8,[[["componentlink",6]]]],[11,"update","","",8,[[],["shouldrender",6]]],[11,"change","","",8,[[],["shouldrender",6]]],[11,"view","","",8,[[],["html",6]]],[11,"builder","","",0,[[]]]],"p":[[3,"Props"],[3,"WireWrapped"],[3,"ViewContext"],[4,"Status"],[4,"Msg"],[8,"StateView"],[3,"StateManager"],[3,"UpdateInterval"],[3,"StateMachineComponent"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);